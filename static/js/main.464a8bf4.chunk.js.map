{"version":3,"sources":["api.ts","routes/Chart.tsx","components/PriceCardBox.js","routes/Price.tsx","atom.js","components/Header.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","Chart","coinId","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","type","series","map","price","obj","x","time_open","y","open","high","low","close","options","plotOptions","candlestick","colors","upward","downward","chart","height","title","text","align","style","color","xaxis","yaxis","tooltip","enabled","PriceCardBox","desc","Container","Title","Desc","styled","div","props","theme","textColor","bgColor","Price","coinName","fetchCoinPriceInfo","quotes","USD","market_cap_change_24h","percent_change_30m","percent_change_1h","percent_change_12h","percent_change_24h","toggleStateAtom","atom","key","default","withRouter","history","useRecoilState","toggleState","setToggleState","BackBtn","onClick","push","ToggleBtn","section","h1","accentColor","Loader","span","HeaderComponent","header","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","Helmet","name","rank","symbol","toFixed","description","total_supply","max_supply","to","path","HeaderComponents","CoinsList","ul","li","Img","img","Coins","slice","coin","pathname","id","src","toLowerCase","Router","LightTheme","darkTheme","GlobalStyle","createGlobalStyle","App","useRecoilValue","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.464a8bf4.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n\treturn fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n\treturn fetch(`${BASE_URL}/coins/${coinId}`).then((response) => response.json());\n}\n\nexport function fetchCoinTickers(coinId: string) {\n\treturn fetch(`${BASE_URL}/tickers/${coinId}`).then((response) => response.json());\n}\n\nexport function fetchCoinHistory(coinId: string) {\n\tconst endDate = Math.floor(Date.now() / 1000);\n\tconst startDate = endDate - 60 * 60 * 24 * 7 * 2;\n\treturn fetch(`${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`).then((response) => response.json());\n}\n\nexport function fetchCoinPriceInfo(coinName: string) {\n\treturn fetch(`${BASE_URL}/tickers/${coinName}`).then((response) => response.json());\n}\n","import ApexChart from 'react-apexcharts';\nimport { useQuery } from 'react-query';\nimport { fetchCoinHistory } from '../api';\n\ninterface IHistorical {\n\ttime_open: string;\n\ttime_close: string;\n\topen: number;\n\thigh: number;\n\tlow: number;\n\tclose: number;\n\tvolume: number;\n\tmarket_cap: number;\n}\ninterface ChartProps {\n\tcoinId: string;\n}\nfunction Chart({ coinId }: ChartProps) {\n\tconst { isLoading, data } = useQuery<IHistorical[]>(['ohlcv', coinId], () => fetchCoinHistory(coinId), {\n\t\trefetchInterval: 10000,\n\t});\n\treturn (\n\t\t<div>\n\t\t\t{isLoading ? (\n\t\t\t\t'Loading chart...'\n\t\t\t) : (\n\t\t\t\t<ApexChart\n\t\t\t\t\ttype=\"candlestick\"\n\t\t\t\t\tseries={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata: data?.map((price) => {\n\t\t\t\t\t\t\t\tconst obj: any = {};\n\t\t\t\t\t\t\t\tobj.x = new Date(price.time_open);\n\t\t\t\t\t\t\t\tobj.y = [price.open, price.high, price.low, price.close];\n\t\t\t\t\t\t\t\treturn obj;\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t},\n\t\t\t\t\t]}\n\t\t\t\t\toptions={{\n\t\t\t\t\t\tplotOptions: {\n\t\t\t\t\t\t\tcandlestick: {\n\t\t\t\t\t\t\t\tcolors: { upward: 'red', downward: 'blue' },\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tchart: {\n\t\t\t\t\t\t\ttype: 'candlestick',\n\t\t\t\t\t\t\theight: 350,\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\ttext: 'CandleStick Chart',\n\t\t\t\t\t\t\talign: 'left',\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tcolor: 'red',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\txaxis: {\n\t\t\t\t\t\t\ttype: 'datetime',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tyaxis: {\n\t\t\t\t\t\t\ttooltip: {\n\t\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default Chart;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport default function PriceCardBox({ title, desc }) {\n\treturn (\n\t\t<Container>\n\t\t\t<Title>{title}</Title>\n\t\t\t<Desc desc={desc}>{desc}</Desc>\n\t\t</Container>\n\t);\n}\n\nconst Container = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tbackground-color: ${(props) => props.theme.textColor};\n\twidth: 100%;\n\theight: 40px;\n\tmargin-bottom: 10px;\n\tborder-radius: 20px;\n\tpadding: 10px;\n\talign-items: center;\n`;\nconst Title = styled.div`\n\tcolor: ${(props) => props.theme.bgColor};\n\tfont-weight: bold;\n`;\nconst Desc = styled.div`\n\tcolor: ${(props) => props.theme.bgColor};\n\tfont-weight: 500;\n`;\n","import { useQuery } from 'react-query';\nimport { fetchCoinPriceInfo } from '../api';\nimport PriceCardBox from '../components/PriceCardBox';\n\ninterface ChartProps {\n\tcoinName: string;\n}\n\nfunction Price({ coinName }: ChartProps) {\n\tconst { data } = useQuery(['priceQuery', coinName], () => fetchCoinPriceInfo(coinName), {\n\t\trefetchInterval: 10000,\n\t});\n\treturn (\n\t\t<div>\n\t\t\t<PriceCardBox desc={`$ ${data?.quotes?.USD.price}`} title=\"Price\" />\n\t\t\t<PriceCardBox desc={`${data?.quotes?.USD.market_cap_change_24h} %`} title=\"Max Change rate in last 24h:\" />\n\t\t\t<PriceCardBox desc={`${data?.quotes?.USD.percent_change_30m} %`} title=\"Change rate (last 30 Minutes):\" />\n\t\t\t<PriceCardBox desc={`${data?.quotes?.USD.percent_change_1h} %`} title=\"Change rate (last 1 hours):\" />\n\t\t\t<PriceCardBox desc={`${data?.quotes?.USD.percent_change_12h} %`} title=\"Change rate (last 12 hours):\" />\n\t\t\t<PriceCardBox desc={`${data?.quotes?.USD.percent_change_24h} %`} title=\"Change rate (last 24 hours):\" />\n\t\t</div>\n\t);\n}\n\nexport default Price;\n\n// price, max24, change30m, change1Hour, change12Hour, change24Hour\n","import { atom } from 'recoil';\n\nexport const toggleStateAtom = atom({\n\tkey: 'toggleStateAtom',\n\tdefault: 'dark',\n});\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useRecoilState } from 'recoil';\nimport styled from 'styled-components';\nimport { toggleStateAtom } from '../atom';\n\nfunction Header({ history }: any) {\n\tconst [toggleState, setToggleState] = useRecoilState(toggleStateAtom);\n\n\tconst toggleAction = (): void => {\n\t\tsetToggleState(toggleState === 'dark' ? 'light' : 'dark');\n\t};\n\n\tconst backAction = (): void => {\n\t\thistory.push('/');\n\t};\n\treturn (\n\t\t<Container>\n\t\t\t<BackBtn onClick={backAction}>{'<< 뒤로가기'}</BackBtn>\n\t\t\t<ToggleBtn onClick={toggleAction}>{toggleState === 'dark' ? 'Light 모드로' : 'Dark 모드로'}</ToggleBtn>\n\t\t</Container>\n\t);\n}\nexport default withRouter(Header);\nconst Container = styled.section`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tpadding: 0px 20px;\n\tmax-width: 480px;\n\tmargin: 0 auto;\n`;\n\nconst BackBtn = styled.div`\n\tcursor: pointer;\n`;\n\nconst ToggleBtn = styled.div`\n\tcursor: pointer;\n`;\n","import { useQuery } from 'react-query';\nimport { Helmet } from 'react-helmet';\nimport { Switch, Route, useLocation, useParams, useRouteMatch } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { fetchCoinInfo, fetchCoinTickers } from '../api';\nimport Chart from './Chart';\nimport Price from './Price';\nimport Header from '../components/Header';\n\nconst Title = styled.h1`\n\tfont-size: 48px;\n\tcolor: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n\ttext-align: center;\n\tdisplay: block;\n`;\n\nconst Container = styled.div`\n\tpadding: 0px 20px;\n\tmax-width: 480px;\n\tmargin: 0 auto;\n`;\n\nconst HeaderComponent = styled.header`\n\theight: 15vh;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n`;\n\nconst Overview = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tbackground-color: rgba(0, 0, 0, 0.5);\n\tpadding: 10px 20px;\n\tborder-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\twidth: 33%;\n\tspan:first-child {\n\t\tfont-size: 10px;\n\t\tfont-weight: 400;\n\t\ttext-transform: uppercase;\n\t\tmargin-bottom: 5px;\n\t}\n`;\nconst Description = styled.p`\n\tmargin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n\tdisplay: grid;\n\tgrid-template-columns: repeat(2, 1fr);\n\tmargin: 25px 0px;\n\tgap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n\ttext-align: center;\n\ttext-transform: uppercase;\n\tfont-size: 12px;\n\tfont-weight: 400;\n\tbackground-color: rgba(0, 0, 0, 0.5);\n\tborder-radius: 10px;\n\tcolor: ${(props) => (props.isActive ? props.theme.accentColor : props.theme.textColor)};\n\ta {\n\t\tpadding: 7px 0px;\n\t\tdisplay: block;\n\t}\n`;\n\ninterface RouteParams {\n\tcoinId: string;\n}\ninterface RouteState {\n\tname: string;\n}\ninterface InfoData {\n\tid: string;\n\tname: string;\n\tsymbol: string;\n\trank: number;\n\tis_new: boolean;\n\tis_active: boolean;\n\ttype: string;\n\tdescription: string;\n\tmessage: string;\n\topen_source: boolean;\n\tstarted_at: string;\n\tdevelopment_status: string;\n\thardware_wallet: boolean;\n\tproof_type: string;\n\torg_structure: string;\n\thash_algorithm: string;\n\tfirst_data_at: string;\n\tlast_data_at: string;\n}\ninterface PriceData {\n\tid: string;\n\tname: string;\n\tsymbol: string;\n\trank: number;\n\tcirculating_supply: number;\n\ttotal_supply: number;\n\tmax_supply: number;\n\tbeta_value: number;\n\tfirst_data_at: string;\n\tlast_updated: string;\n\tquotes: {\n\t\tUSD: {\n\t\t\tath_date: string;\n\t\t\tath_price: number;\n\t\t\tmarket_cap: number;\n\t\t\tmarket_cap_change_24h: number;\n\t\t\tpercent_change_1h: number;\n\t\t\tpercent_change_1y: number;\n\t\t\tpercent_change_6h: number;\n\t\t\tpercent_change_7d: number;\n\t\t\tpercent_change_12h: number;\n\t\t\tpercent_change_15m: number;\n\t\t\tpercent_change_24h: number;\n\t\t\tpercent_change_30d: number;\n\t\t\tpercent_change_30m: number;\n\t\t\tpercent_from_price_ath: number;\n\t\t\tprice: number;\n\t\t\tvolume_24h: number;\n\t\t\tvolume_24h_change_24h: number;\n\t\t};\n\t};\n}\n\nfunction Coin() {\n\tconst { coinId } = useParams<RouteParams>();\n\tconst { state } = useLocation<RouteState>();\n\tconst priceMatch = useRouteMatch('/:coinId/price');\n\tconst chartMatch = useRouteMatch('/:coinId/chart');\n\tconst { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(['info', coinId], () => fetchCoinInfo(coinId));\n\tconst { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(['tickers', coinId], () => fetchCoinTickers(coinId), {\n\t\trefetchInterval: 5000,\n\t});\n\tconst loading = infoLoading || tickersLoading;\n\treturn (\n\t\t<Container>\n\t\t\t<Header />\n\t\t\t<Helmet>\n\t\t\t\t<title>{state?.name ? state.name : loading ? 'Loading...' : infoData?.name}</title>\n\t\t\t</Helmet>\n\t\t\t<HeaderComponent>\n\t\t\t\t<Title>{state?.name ? state.name : loading ? 'Loading...' : infoData?.name}</Title>\n\t\t\t</HeaderComponent>\n\t\t\t{loading ? (\n\t\t\t\t<Loader>Loading...</Loader>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<Overview>\n\t\t\t\t\t\t<OverviewItem>\n\t\t\t\t\t\t\t<span>Rank:</span>\n\t\t\t\t\t\t\t<span>{infoData?.rank}</span>\n\t\t\t\t\t\t</OverviewItem>\n\t\t\t\t\t\t<OverviewItem>\n\t\t\t\t\t\t\t<span>Symbol:</span>\n\t\t\t\t\t\t\t<span>${infoData?.symbol}</span>\n\t\t\t\t\t\t</OverviewItem>\n\t\t\t\t\t\t<OverviewItem>\n\t\t\t\t\t\t\t<span>Price:</span>\n\t\t\t\t\t\t\t<span>${tickersData?.quotes.USD.price.toFixed(3)}</span>\n\t\t\t\t\t\t</OverviewItem>\n\t\t\t\t\t</Overview>\n\t\t\t\t\t<Description>{infoData?.description}</Description>\n\t\t\t\t\t<Overview>\n\t\t\t\t\t\t<OverviewItem>\n\t\t\t\t\t\t\t<span>Total Suply:</span>\n\t\t\t\t\t\t\t<span>{tickersData?.total_supply}</span>\n\t\t\t\t\t\t</OverviewItem>\n\t\t\t\t\t\t<OverviewItem>\n\t\t\t\t\t\t\t<span>Max Supply:</span>\n\t\t\t\t\t\t\t<span>{tickersData?.max_supply}</span>\n\t\t\t\t\t\t</OverviewItem>\n\t\t\t\t\t</Overview>\n\n\t\t\t\t\t<Tabs>\n\t\t\t\t\t\t<Tab isActive={chartMatch !== null}>\n\t\t\t\t\t\t\t<Link to={`/${coinId}/chart`}>Chart</Link>\n\t\t\t\t\t\t</Tab>\n\t\t\t\t\t\t<Tab isActive={priceMatch !== null}>\n\t\t\t\t\t\t\t<Link to={`/${coinId}/price`}>Price</Link>\n\t\t\t\t\t\t</Tab>\n\t\t\t\t\t</Tabs>\n\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path={`/:coinId/price`}>\n\t\t\t\t\t\t\t<Price coinName={coinId} />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path={`/:coinId/chart`}>\n\t\t\t\t\t\t\t<Chart coinId={coinId} />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</Container>\n\t);\n}\nexport default Coin;\n","import { Helmet } from 'react-helmet';\nimport { useQuery } from 'react-query';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { fetchCoins } from '../api';\nimport Header from '../components/Header';\n\nconst Container = styled.div`\n\tpadding: 0px 20px;\n\tmax-width: 480px;\n\tmargin: 0 auto;\n`;\n\nconst HeaderComponents = styled.header`\n\theight: 15vh;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n\tbackground-color: white;\n\tcolor: ${(props) => props.theme.bgColor};\n\tborder-radius: 15px;\n\tmargin-bottom: 10px;\n\ta {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tpadding: 20px;\n\t\ttransition: color 0.2s ease-in;\n\t}\n\t&:hover {\n\t\ta {\n\t\t\tcolor: ${(props) => props.theme.accentColor};\n\t\t}\n\t}\n`;\n\nconst Title = styled.h1`\n\tfont-size: 48px;\n\tcolor: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n\ttext-align: center;\n\tdisplay: block;\n`;\n\nconst Img = styled.img`\n\twidth: 35px;\n\theight: 35px;\n\tmargin-right: 10px;\n`;\n\ninterface ICoin {\n\tid: string;\n\tname: string;\n\tsymbol: string;\n\trank: number;\n\tis_new: boolean;\n\tis_active: boolean;\n\ttype: string;\n}\n\nfunction Coins() {\n\tconst { isLoading, data } = useQuery<ICoin[]>('allCoins', fetchCoins);\n\treturn (\n\t\t<Container>\n\t\t\t<Header />\n\n\t\t\t<Helmet>\n\t\t\t\t<title>코인</title>\n\t\t\t</Helmet>\n\t\t\t<HeaderComponents>\n\t\t\t\t<Title>코인</Title>\n\t\t\t</HeaderComponents>\n\t\t\t{isLoading ? (\n\t\t\t\t<Loader>Loading...</Loader>\n\t\t\t) : (\n\t\t\t\t<CoinsList>\n\t\t\t\t\t{data?.slice(0, 100).map((coin) => (\n\t\t\t\t\t\t<Coin key={coin.id}>\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\t\t\tpathname: `/${coin.id}`,\n\t\t\t\t\t\t\t\t\tstate: { name: coin.name },\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Img src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`} />\n\t\t\t\t\t\t\t\t{coin.name} &rarr;\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Coin>\n\t\t\t\t\t))}\n\t\t\t\t</CoinsList>\n\t\t\t)}\n\t\t</Container>\n\t);\n}\nexport default Coins;\n","import { HashRouter, Route, Switch } from 'react-router-dom';\nimport Coin from './routes/Coin';\nimport Coins from './routes/Coins';\n\nconst Router = () => {\n\treturn (\n\t\t<HashRouter>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/:coinId\">\n\t\t\t\t\t<Coin />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t<Coins />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</HashRouter>\n\t);\n};\n\nexport default Router;\n","import { DefaultTheme } from 'styled-components';\n\nexport const LightTheme: DefaultTheme = {\n\tbgColor: '#4aa8fc',\n\ttextColor: 'white',\n\taccentColor: '#046ff9',\n};\n\nexport const darkTheme: DefaultTheme = {\n\tbgColor: '#2f3640',\n\ttextColor: '#f5f6fa',\n\taccentColor: '#9c88ff',\n};\n","import { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport Router from './Router';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport { LightTheme, darkTheme } from './theme';\nimport { RecoilRoot, useRecoilState, useRecoilValue } from 'recoil';\nimport { toggleStateAtom } from './atom';\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n\tconst toggleState = useRecoilValue(toggleStateAtom);\n\n\treturn (\n\t\t<>\n\t\t\t<ThemeProvider theme={toggleState === 'dark' ? darkTheme : LightTheme}>\n\t\t\t\t<GlobalStyle />\n\t\t\t\t<Router />\n\t\t\t\t<ReactQueryDevtools initialIsOpen={true} />\n\t\t\t</ThemeProvider>\n\t\t</>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { RecoilRoot } from 'recoil';\nimport App from './App';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<QueryClientProvider client={queryClient}>\n\t\t\t<RecoilRoot>\n\t\t\t\t<App />\n\t\t\t</RecoilRoot>\n\t\t</QueryClientProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n"],"sourceRoot":""}